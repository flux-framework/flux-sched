#!/bin/bash -e
#
# If resource is not installed into flux-core's $prefix,
# one should set FLUX_RC_EXTRA environment variable to flux-sched's $prefix/etc/flux
# so that flux start can automatically execute resource's runlevel 1 and 3.
#
# In addition, users can set FLUXION_RESOURCE_OPTIONS if they want flux
# to load in the resource matching service module with non-default options.
#
# Finally, if FLUXION_RESOURCE_RC_NOOP=1, flux-core
# won't load in or remove resource as part of runlevel 1 and 3.
#
# Note that we use "flux reload -f resource" instead of "flux load resource"
# to ease our testing.
# Without this, some of the in-tree tests can fail when flux-sched is already
# installed with flux-core. These installed rc1 scripts are
# executed first and disallow the "in-tree" modules from loading.
# We now use "flux reload -f resource" so that when these failing tests
# load it via FLUX_RC_EXTRA, the in-tree version can be loaded.

if [ -z ${FLUXION_RESOURCE_RC_NOOP} ]; then
    # Unloading sched-simple as sched-fluxion-resource requires resource.acquire
    # that is exclusively used by it.
    flux module remove -f sched-simple
    FLUXION_RESOURCE_OPTIONS=${FLUXION_RESOURCE_OPTIONS:-"load-allowlist=node,core,gpu"}
    flux module reload -f sched-fluxion-resource ${FLUXION_RESOURCE_OPTIONS}
fi

