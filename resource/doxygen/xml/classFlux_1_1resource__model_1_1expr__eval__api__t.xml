<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classFlux_1_1resource__model_1_1expr__eval__api__t" kind="class" language="C++" prot="public">
    <compoundname>Flux::resource_model::expr_eval_api_t</compoundname>
    <includes refid="expr__eval__api_8hpp" local="no">expr_eval_api.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1aab57aed73bff2b54fd3cc61680dc67e0" prot="private" static="no" strong="yes">
        <type>int</type>
        <name>pred_op_t</name>
        <enumvalue id="classFlux_1_1resource__model_1_1expr__eval__api__t_1aab57aed73bff2b54fd3cc61680dc67e0a558ffc8f5770d8e4f95f51d822685532" prot="private">
          <name>AND</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classFlux_1_1resource__model_1_1expr__eval__api__t_1aab57aed73bff2b54fd3cc61680dc67e0a1d00e7dce692e8dc3f6877f035e3a616" prot="private">
          <name>OR</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classFlux_1_1resource__model_1_1expr__eval__api__t_1aab57aed73bff2b54fd3cc61680dc67e0a696b031073e74bf2cb98e5ef201d4aa3" prot="private">
          <name>UNKNOWN</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="55" column="5" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" bodystart="55" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a81ca23da607b3fd67b9ac9430bab23cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::validate</definition>
        <argsstring>(const std::string &amp;expr, const expr_eval_target_base_t &amp;target)</argsstring>
        <name>validate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Validate if an expression is valid w/ respect to the target state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>expression string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>expression evaluation target of <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="40" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="268" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a3cdad210c555da4632618b154c631b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::evaluate</definition>
        <argsstring>(const std::string &amp;expr, const expr_eval_target_base_t &amp;target, bool &amp;result)</argsstring>
        <name>evaluate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Evaluate if an expression is valid w/ respect to the target state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>expression string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>expression evaluation target of <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="50" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="297" bodyend="327"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a929d6fd107beb4adeffc1966a92457e2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Flux::resource_model::expr_eval_api_t::is_paren</definition>
        <argsstring>(const std::string &amp;expr, std::size_t at) const</argsstring>
        <name>is_paren</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="61" column="10" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="29" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1af0b9c1112aad3432aea875b3853c3f7c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Flux::resource_model::expr_eval_api_t::find_closing_paren</definition>
        <argsstring>(const std::string &amp;expr, size_t at) const</argsstring>
        <name>find_closing_paren</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="62" column="12" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="38" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a7439e84dc36cb22f87e0d3389d8103e6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::parse_expr_leaf</definition>
        <argsstring>(const std::string &amp;expr, size_t at, size_t &amp;tok, size_t &amp;len) const</argsstring>
        <name>parse_expr_leaf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>tok</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="65" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a82657b6f8733666715610fd3cbf90434" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::parse_expr_paren</definition>
        <argsstring>(const std::string &amp;expr, size_t at, size_t &amp;tok, size_t &amp;len) const</argsstring>
        <name>parse_expr_paren</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>tok</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="67" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="74" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a86a0a7348a985277285bebccc863ac3f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>pred_op_t</type>
        <definition>expr_eval_api_t::pred_op_t Flux::resource_model::expr_eval_api_t::parse_pred_op</definition>
        <argsstring>(const std::string &amp;e, size_t at, size_t &amp;next) const</argsstring>
        <name>parse_pred_op</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="69" column="15" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="96" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a396304c773d64307be950332204b564d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::validate_leaf</definition>
        <argsstring>(const std::string &amp;expr, const expr_eval_target_base_t &amp;target)</argsstring>
        <name>validate_leaf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="73" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="127" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a5e2dfc362031f742625ed857fd82c052" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::validate_paren</definition>
        <argsstring>(const std::string &amp;expr, const expr_eval_target_base_t &amp;target, size_t at, size_t &amp;nx)</argsstring>
        <name>validate_paren</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>nx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="75" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="149" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a8fc2b879958665efef47f44350d6a730" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::validate_pred</definition>
        <argsstring>(pred_op_t op) const</argsstring>
        <name>validate_pred</name>
        <param>
          <type>pred_op_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="78" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="175" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1a291072a900f3fa003c99ec908000024e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::evaluate_leaf</definition>
        <argsstring>(const std::string &amp;expr, const expr_eval_target_base_t &amp;target, bool &amp;result)</argsstring>
        <name>evaluate_leaf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="81" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="190" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1adf39b0a50a0035b587d74ff134bc5d50" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::evaluate_paren</definition>
        <argsstring>(const std::string &amp;expr, const expr_eval_target_base_t &amp;target, size_t at, size_t &amp;next, bool &amp;result)</argsstring>
        <name>evaluate_paren</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const <ref refid="classFlux_1_1resource__model_1_1expr__eval__target__base__t" kindref="compound">expr_eval_target_base_t</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>at</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>next</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="83" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="217" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classFlux_1_1resource__model_1_1expr__eval__api__t_1ad4a63c3328ddac4616c03524984518bc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Flux::resource_model::expr_eval_api_t::evaluate_pred</definition>
        <argsstring>(pred_op_t op, bool result2, bool &amp;result1) const</argsstring>
        <name>evaluate_pred</name>
        <param>
          <type>pred_op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>result2</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>result1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="86" column="9" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.cpp" bodystart="243" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Expression evaluation API class. Parse and validate or evaluate an expression using the state of each individual predicates provided the target state of expr_eval_target_t. Currently supported expression: An expression is one or more predicates combined with logical conjunction (&quot;and&quot;), disjunction (&quot;or&quot;), or parentheses (&quot;()&quot;). The evaluation order is consistent with these operators used in predicate calculus. </para>
    </detaileddescription>
    <location file="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" line="30" column="1" bodyfile="/home/hobbs17/flux-sched/resource/evaluators/expr_eval_api.hpp" bodystart="30" bodyend="87"/>
    <listofallmembers>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a3cdad210c555da4632618b154c631b6c" prot="public" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>evaluate</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a291072a900f3fa003c99ec908000024e" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>evaluate_leaf</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1adf39b0a50a0035b587d74ff134bc5d50" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>evaluate_paren</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1ad4a63c3328ddac4616c03524984518bc" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>evaluate_pred</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1af0b9c1112aad3432aea875b3853c3f7c" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>find_closing_paren</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a929d6fd107beb4adeffc1966a92457e2" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>is_paren</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a7439e84dc36cb22f87e0d3389d8103e6" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>parse_expr_leaf</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a82657b6f8733666715610fd3cbf90434" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>parse_expr_paren</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a86a0a7348a985277285bebccc863ac3f" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>parse_pred_op</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1aab57aed73bff2b54fd3cc61680dc67e0" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>pred_op_t</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a81ca23da607b3fd67b9ac9430bab23cf" prot="public" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>validate</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a396304c773d64307be950332204b564d" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>validate_leaf</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a5e2dfc362031f742625ed857fd82c052" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>validate_paren</name></member>
      <member refid="classFlux_1_1resource__model_1_1expr__eval__api__t_1a8fc2b879958665efef47f44350d6a730" prot="private" virt="non-virtual"><scope>Flux::resource_model::expr_eval_api_t</scope><name>validate_pred</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
