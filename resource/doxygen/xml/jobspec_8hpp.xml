<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="jobspec_8hpp" kind="file" language="C++">
    <compoundname>jobspec.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">limits</includes>
    <includes local="no">yaml-cpp/yaml.h</includes>
    <includes refid="parse__error_8hpp" local="yes">parse_error.hpp</includes>
    <includes refid="constraint_8hpp" local="yes">constraint.hpp</includes>
    <includedby refid="constraint_8cpp" local="yes">constraint.cpp</includedby>
    <includedby refid="flux-jobspec-validate_8cpp" local="yes">flux-jobspec-validate.cpp</includedby>
    <includedby refid="hostlist__constraint_8hpp" local="yes">hostlist_constraint.hpp</includedby>
    <includedby refid="jobspec_8cpp" local="yes">jobspec.cpp</includedby>
    <includedby refid="rank__constraint_8hpp" local="yes">rank_constraint.hpp</includedby>
    <includedby refid="dfu__match__cb_8hpp" local="yes">dfu_match_cb.hpp</includedby>
    <includedby refid="matcher_8hpp" local="yes">matcher.hpp</includedby>
    <includedby refid="dfu__impl_8hpp" local="yes">dfu_impl.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="1">
        <label>jobspec.hpp</label>
        <link refid="jobspec_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="9">
        <label>constraint.hpp</label>
        <link refid="constraint_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>resource/schema/resource_base.hpp</label>
        <link refid="resource__base_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>parse_error.hpp</label>
        <link refid="parse__error_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>dfu_match_locality.hpp</label>
        <link refid="dfu__match__locality_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>dfu_match_low_id_first.hpp</label>
        <link refid="dfu__match__low__id__first_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>jobspec.hpp</label>
        <link refid="jobspec_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>dfu_match_cb.hpp</label>
        <link refid="dfu__match__cb_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dfu.hpp</label>
        <link refid="dfu_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>command.hpp</label>
        <link refid="command_8hpp_source"/>
      </node>
      <node id="3">
        <label>rank_constraint.hpp</label>
        <link refid="rank__constraint_8hpp_source"/>
      </node>
      <node id="5">
        <label>dfu_match_high_id_first.hpp</label>
        <link refid="dfu__match__high__id__first_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rq2.hpp</label>
        <link refid="rq2_8hpp_source"/>
      </node>
      <node id="2">
        <label>hostlist_constraint.hpp</label>
        <link refid="hostlist__constraint_8hpp_source"/>
      </node>
      <node id="7">
        <label>reapi_cli.hpp</label>
        <link refid="reapi__cli_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>dfu_match_policy_factory.hpp</label>
        <link refid="dfu__match__policy__factory_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>reapi_cli_impl.hpp</label>
        <link refid="reapi__cli__impl_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>matcher.hpp</label>
        <link refid="matcher_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>dfu_impl.hpp</label>
        <link refid="dfu__impl_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dfu_match_multilevel_id_impl.hpp</label>
        <link refid="dfu__match__multilevel__id__impl_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>dfu_match_var_aware.hpp</label>
        <link refid="dfu__match__var__aware_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>dfu_match_multilevel_id.hpp</label>
        <link refid="dfu__match__multilevel__id_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classFlux_1_1Jobspec_1_1Resource" prot="public">Flux::Jobspec::Resource</innerclass>
    <innerclass refid="classFlux_1_1Jobspec_1_1Task" prot="public">Flux::Jobspec::Task</innerclass>
    <innerclass refid="structFlux_1_1Jobspec_1_1System" prot="public">Flux::Jobspec::System</innerclass>
    <innerclass refid="structFlux_1_1Jobspec_1_1Attributes" prot="public">Flux::Jobspec::Attributes</innerclass>
    <innerclass refid="classFlux_1_1Jobspec_1_1Jobspec" prot="public">Flux::Jobspec::Jobspec</innerclass>
    <innernamespace refid="namespaceFlux">Flux</innernamespace>
    <innernamespace refid="namespaceFlux_1_1Jobspec">Flux::Jobspec</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2017<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>(c.f.<sp/>AUTHORS,<sp/>NOTICE.LLNS,<sp/>LICENSE)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Flux<sp/>resource<sp/>manager<sp/>framework.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>details,<sp/>see<sp/>https://github.com/flux-framework.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">\*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>jobspec<sp/>module<sp/>handles<sp/>parsing<sp/>the<sp/>Flux<sp/>jobspec<sp/>format<sp/>as<sp/>specified</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>in<sp/>Spec<sp/>14<sp/>in<sp/>the<sp/>Flux<sp/>RFC<sp/>project:<sp/>https://github.com/flux-framework/rfc</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>The<sp/>primary<sp/>interface<sp/>in<sp/>the<sp/>library<sp/>is<sp/>the<sp/>Flux:Jobspec::Jobspec<sp/>class.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>constructor<sp/>Flux::Jobspec::Jobspec()<sp/>can<sp/>handle<sp/>jobspec<sp/>data<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>std::string,<sp/>std::istream,<sp/>or<sp/>the<sp/>top<sp/>document<sp/>YAML::Node<sp/>as<sp/>pre-processed</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>yaml-cpp<sp/>library.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>When<sp/>errors<sp/>are<sp/>found<sp/>in<sp/>the<sp/>jobspec<sp/>stream<sp/>the<sp/>library<sp/>will<sp/>raise<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Flux::Jobspec:parse_error<sp/>exception.<sp/><sp/>If<sp/>the<sp/>library<sp/>was<sp/>able<sp/>to<sp/>determine</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>the<sp/>location<sp/>that<sp/>the<sp/>error<sp/>occurred<sp/>in<sp/>jobspec<sp/>yaml<sp/>stream,<sp/>it<sp/>will<sp/>appear</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>position,<sp/>line,<sp/>and<sp/>column<sp/>members<sp/>of<sp/>the<sp/>parse_error<sp/>object.<sp/><sp/>If<sp/>it</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>is<sp/>unable<sp/>to<sp/>determine<sp/>the<sp/>location,<sp/>all<sp/>three<sp/>of<sp/>those<sp/>fields<sp/>will<sp/>be<sp/>-1.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>The<sp/>library<sp/>will<sp/>only<sp/>be<sp/>able<sp/>to<sp/>determine<sp/>the<sp/>location<sp/>of<sp/>error<sp/>with</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>yaml-cpp<sp/>version<sp/>0.5.3<sp/>or<sp/>newer.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JOBSPEC_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JOBSPEC_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;yaml-cpp/yaml.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parse_error.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;constraint.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Flux<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Jobspec<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>tristate_t<sp/>{<sp/>FALSE,<sp/>TRUE,<sp/>UNSPECIFIED<sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classFlux_1_1Jobspec_1_1Resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFlux_1_1Jobspec_1_1Resource" kindref="compound">Resource</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>type;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>min;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>std::numeric_limits&lt;unsigned<sp/>int&gt;::max();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>oper<sp/>=<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operand<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>count;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unit;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>label;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>id;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>tristate_t<sp/>exclusive<sp/>=<sp/>tristate_t::UNSPECIFIED;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Resource&gt;<sp/>with;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user_data<sp/>has<sp/>no<sp/>library<sp/>internal<sp/>usage,<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entirely<sp/>for<sp/>the<sp/>convenience<sp/>of<sp/>external<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>int64_t&gt;<sp/>user_data;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFlux_1_1Jobspec_1_1Resource" kindref="compound">Resource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node&amp;);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classFlux_1_1Jobspec_1_1Task" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFlux_1_1Jobspec_1_1Task" kindref="compound">Task</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>command;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>slot;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>count;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>distribution;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>attributes;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFlux_1_1Jobspec_1_1Task" kindref="compound">Task</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node&amp;);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structFlux_1_1Jobspec_1_1System" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>queue<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cwd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>environment;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>YAML::Node&gt;<sp/>optional;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Constraint&gt;<sp/>constraint<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref><sp/>&amp;s)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>to<sp/>use<sp/>move<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref>(<ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref><sp/>&amp;&amp;s)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref><sp/>&amp;&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>to<sp/>use<sp/>move<sp/>operator=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref>&amp;<sp/>operator=(<ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref><sp/>&amp;&amp;a)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structFlux_1_1Jobspec_1_1Attributes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>YAML::Node<sp/>user;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1System" kindref="compound">System</ref><sp/>system;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref><sp/>&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>to<sp/>use<sp/>move<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref>(<ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref><sp/>&amp;&amp;a)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref><sp/>&amp;&amp;a)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref>&amp;<sp/>operator=(<ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref><sp/>&amp;&amp;a)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classFlux_1_1Jobspec_1_1Jobspec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFlux_1_1Jobspec_1_1Jobspec" kindref="compound">Jobspec</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Resource&gt;<sp/>resources;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Task&gt;<sp/>tasks;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1Jobspec_1_1Attributes" kindref="compound">Attributes</ref><sp/>attributes;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFlux_1_1Jobspec_1_1Jobspec" kindref="compound">Jobspec</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFlux_1_1Jobspec_1_1Jobspec" kindref="compound">Jobspec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node&amp;);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFlux_1_1Jobspec_1_1Jobspec" kindref="compound">Jobspec</ref>(std::istream<sp/>&amp;is);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFlux_1_1Jobspec_1_1Jobspec" kindref="compound">Jobspec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>s,<sp/><ref refid="classFlux_1_1Jobspec_1_1Jobspec" kindref="compound">Jobspec</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>js);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>s,<sp/><ref refid="classFlux_1_1Jobspec_1_1Resource" kindref="compound">Resource</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>s,<sp/><ref refid="classFlux_1_1Jobspec_1_1Task" kindref="compound">Task</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>t);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Jobspec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Flux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>JOBSPEC_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/hobbs17/flux-sched/resource/libjobspec/jobspec.hpp"/>
  </compounddef>
</doxygen>
