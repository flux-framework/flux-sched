<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="planner__test02_8cpp" kind="file" language="C++">
    <compoundname>planner_test02.cpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cerrno</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes refid="planner__multi_8h" local="yes">resource/planner/c/planner_multi.h</includes>
    <includes local="yes">src/common/libtap/tap.h</includes>
    <incdepgraph>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="10">
        <label>resource/planner/c/planner_multi.h</label>
        <link refid="planner__multi_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="14">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>cerrno</label>
      </node>
      <node id="2">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>src/common/libtap/tap.h</label>
      </node>
      <node id="11">
        <label>planner.h</label>
        <link refid="planner_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstring</label>
      </node>
      <node id="1">
        <label>planner_test02.cpp</label>
        <link refid="planner__test02_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="planner__test02_8cpp_1a38a12f0abb4004c10d3fe01a413dcd7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void to_stream</definition>
        <argsstring>(int64_t base_time, uint64_t duration, const uint64_t *cnts, const char **types, size_t len, std::stringstream &amp;ss)</argsstring>
        <name>to_stream</name>
        <param>
          <type>int64_t</type>
          <declname>base_time</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>cnts</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>types</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>std::stringstream &amp;</type>
          <declname>ss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="27" column="13" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1ab4d571483a64c8e985eb8af4322e6149" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_basics</definition>
        <argsstring>()</argsstring>
        <name>test_multi_basics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="40" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="40" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1a5d93309b835781aa89c1ca4995a5b6c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_getters</definition>
        <argsstring>()</argsstring>
        <name>test_multi_getters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="142" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="142" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1ad5e124c5fa4355fa1135e2f517b06921" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_strictly_larger</definition>
        <argsstring>()</argsstring>
        <name>test_multi_strictly_larger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="175" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="175" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1adf7e65ef4d2985f451ec0569344b1028" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_partially_larger</definition>
        <argsstring>()</argsstring>
        <name>test_multi_partially_larger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="302" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="302" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1ab1341781c661786665745ad99f9845c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_many_spans</definition>
        <argsstring>()</argsstring>
        <name>test_multi_many_spans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="413" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="413" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1ae518aad5611c685349cc19f72c4b421c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_add_remove</definition>
        <argsstring>()</argsstring>
        <name>test_multi_add_remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="493" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="493" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1a4ec155a326a7a397864b0b91880d9605" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_constructors_and_overload</definition>
        <argsstring>()</argsstring>
        <name>test_constructors_and_overload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="547" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="547" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1a383b81d8ceaa31ddcd4526aa0d7cc49c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_multi_update</definition>
        <argsstring>()</argsstring>
        <name>test_multi_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="624" column="12" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="624" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="planner__test02_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" line="702" column="5" bodyfile="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp" bodystart="702" bodyend="725"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2014<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>(c.f.<sp/>AUTHORS,<sp/>NOTICE.LLNS,<sp/>LICENSE)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Flux<sp/>resource<sp/>manager<sp/>framework.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>details,<sp/>see<sp/>https://github.com/flux-framework.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">\*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resource/planner/c/planner_multi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;src/common/libtap/tap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>to_stream<sp/>(int64_t<sp/>base_time,<sp/>uint64_t<sp/>duration,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>*cnts,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**types,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/>std::stringstream<sp/>&amp;ss)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_time<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;B(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base_time<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;D(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>duration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;R(&lt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>types[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cnts[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_basics<sp/>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>t<sp/>=<sp/>-1,<sp/>avail<sp/>=<sp/>-1,<sp/>tmax<sp/>=<sp/>INT64_MAX;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span1<sp/>=<sp/>-1,<sp/>span2<sp/>=<sp/>-1,<sp/>span3<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>20,<sp/>100};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>counts1[]<sp/>=<sp/>{1,<sp/>2,<sp/>3,<sp/>2,<sp/>10};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>counts5[]<sp/>=<sp/>{5,<sp/>10,<sp/>15,<sp/>10,<sp/>50};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>counts_many_E[]<sp/>=<sp/>{1,<sp/>1,<sp/>1,<sp/>1,<sp/>50};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>counts_only_C[]<sp/>=<sp/>{0,<sp/>0,<sp/>15,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>*counts10<sp/>=<sp/>resource_totals;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>avail_resources[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>tmax,<sp/>resource_totals,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>with<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>5,<sp/>counts10,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>1,<sp/>counts10,<sp/>len);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;checking<sp/>multi<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>counts5,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>1,<sp/>1000,<sp/>counts5,<sp/>len);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>span1<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>1,<sp/>1000,<sp/>counts5,<sp/>len);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span1<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span1<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>counts10,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>2000,<sp/>1001,<sp/>counts10,<sp/>len);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>span2<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>2000,<sp/>1001,<sp/>counts10,<sp/>len);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span2<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span2<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>2990,<sp/>counts1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>10,<sp/>2991,<sp/>counts1,<sp/>len);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(rc<sp/>==<sp/>-1,<sp/></highlight><highlight class="stringliteral">&quot;over-alloc<sp/>multi:<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1990,<sp/>counts1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>10,<sp/>1990,<sp/>counts1,<sp/>len);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;overlapped<sp/>multi<sp/>resources<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>span3<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>10,<sp/>1990,<sp/>counts1,<sp/>len);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span3<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span3<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>5);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>10,<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>8);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_avail_resources_array_at<sp/>(ctx,<sp/>500,<sp/>avail_resources,<sp/>len);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail_resources[2]<sp/>!=<sp/>12);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>1500,<sp/>0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>9);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>2000,<sp/>0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>2500,<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>3000,<sp/>4);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>3001,<sp/>2);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail<sp/>!=<sp/>30);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;avail_at_resources_*<sp/>works&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>9,<sp/>counts_only_C,<sp/>len);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>1001);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>3001);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT,<sp/></highlight><highlight class="stringliteral">&quot;avail_time_*<sp/>works&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>10,<sp/>counts_many_E,<sp/>len);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>1001);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>3001);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>t<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT,<sp/></highlight><highlight class="stringliteral">&quot;avail_time_*<sp/>test2<sp/>works&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_getters<sp/>()</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>avail<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>resource_total[]<sp/>=<sp/>{10,<sp/>20};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>9999,<sp/>resource_total,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>9999,<sp/>resource_total,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>with<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_base_time<sp/>(ctx);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((rc<sp/>==<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;base_time<sp/>works<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_duration<sp/>(ctx);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((rc<sp/>==<sp/>9999),<sp/></highlight><highlight class="stringliteral">&quot;duration<sp/>works<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_resource_total_at<sp/>(ctx,<sp/>0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(avail<sp/>!=<sp/>10));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_resource_total_by_type<sp/>(ctx,<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(avail<sp/>!=<sp/>20));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;planner_multi<sp/>getters<sp/>work&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_strictly_larger<sp/>()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>t<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>tmax<sp/>=<sp/>INT64_MAX;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request1[]<sp/>=<sp/>{1,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request2[]<sp/>=<sp/>{0,<sp/>2,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request3[]<sp/>=<sp/>{0,<sp/>0,<sp/>3,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request4[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>4,<sp/>0};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request5[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>5};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestA[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>45};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestB[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>30,<sp/>40};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestC[]<sp/>=<sp/>{10,<sp/>18,<sp/>30,<sp/>30,<sp/>30};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>tmax,<sp/>resource_totals,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>with<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>resource<sp/>state<sp/>will<sp/>become<sp/>the<sp/>following<sp/>after</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_add_span<sp/>calls:</highlight></codeline>
<codeline lineno="201"><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/><sp/><sp/><sp/><sp/>9,<sp/>18,<sp/>27,<sp/>36,<sp/>45</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000:<sp/>10,<sp/>18,<sp/>27,<sp/>36,<sp/>45</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2000:<sp/>10,<sp/>20,<sp/>27,<sp/>36,<sp/>45</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3000:<sp/>10,<sp/>20,<sp/>30,<sp/>36,<sp/>45</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4000:<sp/>10,<sp/>20,<sp/>30,<sp/>40,<sp/>45</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5000:<sp/>10,<sp/>20,<sp/>30,<sp/>40,<sp/>50</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>1000,<sp/>request1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>2000,<sp/>request2,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>2000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>2000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>3000,<sp/>request3,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>3000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>3000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>4000,<sp/>request4,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>4000,<sp/>request4,<sp/>len);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>4000,<sp/>request4,<sp/>len);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>5000,<sp/>request5,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>5000,<sp/>request5,<sp/>len);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>5000,<sp/>request5,<sp/>len);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>1000,<sp/>requestA,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestA,<sp/>len);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>4000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>1000,<sp/>requestB,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestB,<sp/>len);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>1000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>2000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>3000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>4000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>3500,<sp/>1000,<sp/>requestB,<sp/>len);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>4000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>1000,<sp/>requestC,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestC,<sp/>len);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>3000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>4000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_partially_larger<sp/>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>t<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>tmax<sp/>=<sp/>INT64_MAX;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request1[]<sp/>=<sp/>{1,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request2[]<sp/>=<sp/>{0,<sp/>2,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request3[]<sp/>=<sp/>{0,<sp/>0,<sp/>3,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request4[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>4,<sp/>0};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request5[]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>5};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestA[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestB[]<sp/>=<sp/>{9,<sp/>20,<sp/>27,<sp/>36,<sp/>50};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestC[]<sp/>=<sp/>{9,<sp/>19,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>tmax,<sp/>resource_totals,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>with<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>resource<sp/>state<sp/>will<sp/>become<sp/>the<sp/>following<sp/>after</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_add_span<sp/>calls:</highlight></codeline>
<codeline lineno="328"><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0:<sp/><sp/><sp/><sp/><sp/>9,<sp/>20,<sp/>30,<sp/>40,<sp/>50</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000:<sp/>10,<sp/>18,<sp/>30,<sp/>40,<sp/>50</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2000:<sp/>10,<sp/>20,<sp/>27,<sp/>40,<sp/>50</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3000:<sp/>10,<sp/>20,<sp/>30,<sp/>36,<sp/>50</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4000:<sp/>10,<sp/>20,<sp/>30,<sp/>40,<sp/>45</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5000:<sp/>10,<sp/>20,<sp/>30,<sp/>40,<sp/>50</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>1000,<sp/>request1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(1000,<sp/>1000,<sp/>request2,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>1000,<sp/>1000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>1000,<sp/>1000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(2000,<sp/>1000,<sp/>request3,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(3000,<sp/>1000,<sp/>request4,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>3000,<sp/>1000,<sp/>request4,<sp/>len);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>3000,<sp/>1000,<sp/>request4,<sp/>len);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(4000,<sp/>1000,<sp/>request5,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>4000,<sp/>1000,<sp/>request5,<sp/>len);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>4000,<sp/>1000,<sp/>request5,<sp/>len);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>requestA,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestA,<sp/>len);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>requestB,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestB,<sp/>len);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>2000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>3000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>requestC,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestC,<sp/>len);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>5000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_many_spans<sp/>()</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>t<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>tmax<sp/>=<sp/>INT64_MAX;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{99,<sp/>99,<sp/>99};</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestA[]<sp/>=<sp/>{99,<sp/>99,<sp/>99};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestB[]<sp/>=<sp/>{98,<sp/>1,<sp/>98};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>requestC[]<sp/>=<sp/>{50,<sp/>49,<sp/>50};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>tmax,<sp/>resource_totals,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>with<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>request[]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request[0]<sp/>=<sp/>i<sp/>%<sp/>100;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request[1]<sp/>=<sp/>99<sp/>-<sp/>(i<sp/>%<sp/>100);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request[2]<sp/>=<sp/>i<sp/>%<sp/>100;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>i*1000,<sp/>1000,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)request,<sp/>len);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>rc);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>i*1000,<sp/>1000,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>*)request,<sp/>len);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>span<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;many<sp/>multi_add_spans<sp/>work&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>requestA,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestA,<sp/>len);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>1000000),<sp/></highlight><highlight class="stringliteral">&quot;avail_time_first<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((t<sp/>==<sp/>-1)<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>requestB,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestB,<sp/>len);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(t<sp/>!=<sp/>1000));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(t<sp/>!=<sp/>(1000<sp/>*<sp/>(100<sp/>*<sp/>i<sp/>+<sp/>1))));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(t<sp/>!=<sp/>1000000));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(-1,<sp/>1000,<sp/>requestC,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_first<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>requestC,<sp/>len);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(t<sp/>!=<sp/>49000));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(t<sp/>!=<sp/>(1000<sp/>*<sp/>(100<sp/>*<sp/>i<sp/>+<sp/>49))));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(t<sp/>!=<sp/>1000000));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>planner_multi_avail_time_next<sp/>(ctx);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(t<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;avail_time_next<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_add_remove<sp/>()</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>tmax<sp/>=<sp/>INT64_MAX;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span1<sp/>=<sp/>-1,<sp/>span2<sp/>=<sp/>-1,<sp/>span3<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request1[]<sp/>=<sp/>{1,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request2[]<sp/>=<sp/>{0,<sp/>2,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request3[]<sp/>=<sp/>{0,<sp/>0,<sp/>3,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>tmax,<sp/>resource_totals,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(ctx<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>with<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(0,<sp/>1000,<sp/>request1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>span1<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span1<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(1000,<sp/>1000,<sp/>request2,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>1000,<sp/>1000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>span2<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>1000,<sp/>1000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span2<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>ss.str<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>to_stream<sp/>(2000,<sp/>1000,<sp/>request3,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)resource_types,<sp/>len,<sp/>ss);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_avail_during<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi-resource<sp/>avail<sp/>works<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>span3<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((span3<sp/>!=<sp/>-1),<sp/></highlight><highlight class="stringliteral">&quot;span<sp/>added<sp/>for<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>ss.str<sp/>().c_str<sp/>());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_rem_span<sp/>(ctx,<sp/>span2);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!rc,<sp/></highlight><highlight class="stringliteral">&quot;multi_rem_span<sp/>works&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>planner_multi_span_size<sp/>(ctx);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((size<sp/>==<sp/>2),<sp/></highlight><highlight class="stringliteral">&quot;planner_multi_span_size<sp/>works&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_constructors_and_overload<sp/>()</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request1[]<sp/>=<sp/>{1,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request2[]<sp/>=<sp/>{0,<sp/>2,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request3[]<sp/>=<sp/>{0,<sp/>0,<sp/>3,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL,<sp/>*ctx2<sp/>=<sp/>NULL,<sp/>*ctx3<sp/>=<sp/>NULL,<sp/>*ctx4<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>1000,<sp/>1000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_add_span<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx,<sp/>ctx)));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;populated<sp/>planner<sp/>should<sp/>equal<sp/>itself&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx2<sp/>=<sp/>planner_multi_empty<sp/>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx2,<sp/>ctx2)));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;empty<sp/>planner<sp/>should<sp/>equal<sp/>itself&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>planner_multis_equal<sp/>(ctx,<sp/>ctx2));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;empty<sp/>planner<sp/>should<sp/>not<sp/>equal<sp/>populated<sp/>planner&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx3<sp/>=<sp/>planner_multi_empty<sp/>();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!planner_multis_equal<sp/>(ctx2,<sp/>ctx3));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_assign<sp/>(ctx2,<sp/>ctx);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx,<sp/>ctx2)));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>assignment<sp/>overload&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx4<sp/>=<sp/>planner_multi_copy<sp/>(ctx2);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx2,<sp/>ctx4)));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>copy<sp/>constructor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx,<sp/>ctx2)));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>copy<sp/>constructor<sp/>doesn&apos;t<sp/>mutate<sp/>planner&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>planners<sp/>after<sp/>mutation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_rem_span<sp/>(ctx2,<sp/>span);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>planner_multi_span_size<sp/>(ctx2);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((size<sp/>==<sp/>2),<sp/></highlight><highlight class="stringliteral">&quot;planner_multi_span_size<sp/>works<sp/>after<sp/>copy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(planner_multis_equal<sp/>(ctx2,<sp/>ctx4))<sp/>||<sp/>rc<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>planner_multi_span_size<sp/>(ctx4);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((size<sp/>==<sp/>3),<sp/></highlight><highlight class="stringliteral">&quot;removing<sp/>span<sp/>doesn&apos;t<sp/>change<sp/>deep<sp/>copy&apos;s<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assignment<sp/>overload<sp/>works<sp/>on<sp/>planners<sp/>with<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_assign<sp/>(ctx4,<sp/>ctx2);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>planner_multi_span_size<sp/>(ctx4);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>((size<sp/>==<sp/>2),<sp/></highlight><highlight class="stringliteral">&quot;planner_multi<sp/>3<sp/>now<sp/>has<sp/>the<sp/>size<sp/>of<sp/>planner_multi<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx2,<sp/>ctx4)));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;assignment<sp/>overload<sp/>works<sp/>on<sp/>planners<sp/>with<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_copy<sp/>(ctx4);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx,<sp/>ctx4)));</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;copy<sp/>constructor<sp/>works<sp/>on<sp/>planners<sp/>with<sp/>updated<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multi_avail_resources_at<sp/>(ctx,<sp/>500,<sp/>1)<sp/>==</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_avail_resources_at<sp/>(ctx4,<sp/>500,<sp/>1)));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;test<sp/>for<sp/>avail<sp/>time<sp/>equality&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx2);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx3);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx4);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_multi_update<sp/>()</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>span<sp/>=<sp/>-1,<sp/>avail<sp/>=<sp/>-1,<sp/>avail1<sp/>=<sp/>-1,<sp/>total<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals1[]<sp/>=<sp/>{5,<sp/>10,<sp/>20};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals2[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50,<sp/>60,<sp/>70};</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types1[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types2[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request1[]<sp/>=<sp/>{1,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request2[]<sp/>=<sp/>{0,<sp/>2,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request3[]<sp/>=<sp/>{0,<sp/>0,<sp/>3,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request4[]<sp/>=<sp/>{0,<sp/>0,<sp/>20};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request5[]<sp/>=<sp/>{0,<sp/>0,<sp/>21};</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>request6[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50,<sp/>60,<sp/>70};</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structplanner__multi__t" kindref="compound">planner_multi_t</ref><sp/>*ctx<sp/>=<sp/>NULL,<sp/>*ctx2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_add_span<sp/>(ctx,<sp/>0,<sp/>1000,<sp/>request1,<sp/>len);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>1000,<sp/>1000,<sp/>request2,<sp/>len);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_add_span<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request3,<sp/>len);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>avail<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx2<sp/>=<sp/>planner_multi_copy<sp/>(ctx);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_update<sp/>(ctx,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>avail1<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(planner_multis_equal<sp/>(ctx,<sp/>ctx2))<sp/>||<sp/>avail<sp/>!=<sp/>avail1<sp/>||<sp/>rc<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;update<sp/>with<sp/>same<sp/>resource<sp/>count<sp/>shouldn&apos;t<sp/>change<sp/>planner_multi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_update<sp/>(ctx,<sp/>resource_totals1,<sp/>resource_types1,<sp/>3);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>avail1<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>1000,<sp/>0);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(planner_multis_equal<sp/>(ctx,<sp/>ctx2))<sp/>||<sp/>avail1<sp/>!=<sp/>3<sp/>||<sp/>rc<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;resource<sp/>reduction<sp/>results<sp/>in<sp/>expected<sp/>resources<sp/>and<sp/>availability&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_update<sp/>(ctx,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(planner_multis_equal<sp/>(ctx,<sp/>ctx2))<sp/>||<sp/>rc<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;re-adding<sp/>resources<sp/>can&apos;t<sp/>restore<sp/>planner_multi<sp/>state<sp/>after<sp/>removal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_update<sp/>(ctx,<sp/>resource_totals1,<sp/>resource_types1,<sp/>3);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>2000,<sp/>1000,<sp/>request4,<sp/>3);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>avail1<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>2000,<sp/>2);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail1<sp/>!=<sp/>0<sp/>||<sp/>span<sp/>==<sp/>-1<sp/>||<sp/>rc<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;can<sp/>allocate<sp/>full<sp/>updated<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>3000,<sp/>1000,<sp/>request5,<sp/>3);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>avail1<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>3000,<sp/>2);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail1<sp/>!=<sp/>20<sp/>||<sp/>span<sp/>!=<sp/>-1<sp/>||<sp/>rc<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>overallocate<sp/>updated<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>planner_multi_update<sp/>(ctx,<sp/>resource_totals2,<sp/>resource_types2,<sp/>7);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>span<sp/>=<sp/>planner_multi_add_span<sp/>(ctx,<sp/>4000,<sp/>1000,<sp/>request6,<sp/>7);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>avail1<sp/>=<sp/>planner_multi_avail_resources_at<sp/>(ctx,<sp/>4000,<sp/>6);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>avail1<sp/>!=<sp/>0<sp/>||<sp/>span<sp/>==<sp/>-1<sp/>||<sp/>rc<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;can<sp/>allocate<sp/>full<sp/>added<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>planner_multi_resources_len<sp/>(ctx);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(planner_multi_resource_total_by_type<sp/>(ctx,<sp/>resource_types2[i])</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>resource_totals2[i])<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!found);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;can<sp/>look<sp/>up<sp/>resources<sp/>by<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>planner_multi_destroy<sp/>(&amp;ctx2);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>plan<sp/>(98);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_basics<sp/>();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_getters<sp/>();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_strictly_larger<sp/>();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_partially_larger<sp/>();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_many_spans<sp/>();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_add_remove<sp/>();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>test_constructors_and_overload<sp/>();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>test_multi_update<sp/>();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>done_testing<sp/>();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>vi:<sp/>ts=4<sp/>sw=4<sp/>expandtab</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/hobbs17/flux-sched/resource/planner/test/planner_test02.cpp"/>
  </compounddef>
</doxygen>
