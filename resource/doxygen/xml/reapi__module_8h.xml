<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="reapi__module_8h" kind="file" language="C++">
    <compoundname>reapi_module.h</compoundname>
    <includes local="no">flux/core.h</includes>
    <includes refid="match__op_8h" local="yes">resource/policies/base/match_op.h</includes>
    <includedby refid="reapi__module_8cpp" local="yes">reapi_module.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>reapi_module.h</label>
        <link refid="reapi__module_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>flux/core.h</label>
      </node>
      <node id="3">
        <label>resource/policies/base/match_op.h</label>
        <link refid="match__op_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="reapi__module_8h_1a33ef33c8adce8e146673bff02af1fd75" prot="public" static="no">
        <type>struct <ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx</ref></type>
        <definition>typedef struct reapi_module_ctx reapi_module_ctx_t</definition>
        <argsstring></argsstring>
        <name>reapi_module_ctx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="1" column="0" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="reapi__module_8h_1a38480ee1a4901d45c335bb4df3cc2a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
        <definition>reapi_module_ctx_t* reapi_module_new</definition>
        <argsstring>()</argsstring>
        <name>reapi_module_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize reapi_module context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="28" column="20" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="33" bodyend="43" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="28" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1a394a82a621ff6e5c50b30a8e008efa98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reapi_module_destroy</definition>
        <argsstring>(reapi_module_ctx_t *ctx)</argsstring>
        <name>reapi_module_destroy</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy reapi module context</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="34" column="6" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="45" bodyend="48" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1a1d367c00ecc925d08e5d9ac61e5aaad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_match</definition>
        <argsstring>(reapi_module_ctx_t *ctx, match_op_t match_op, const char *jobspec, const uint64_t jobid, bool *reserved, char **R, int64_t *at, double *ov)</argsstring>
        <name>reapi_module_match</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>match_op_t</type>
          <declname>match_op</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>jobspec</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>reserved</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Match a jobspec to the &quot;best&quot; resources and either allocate orelse reserve them. The best resources are determined by the selected match policy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>match_op</parametername>
</parameternamelist>
<parameterdescription>
<para>match_op_t: set to specify the specific match option from 1 of 4 choices: MATCH_ALLOCATE: try to allocate now and fail if resources aren&apos;t available. MATCH_ALLOCATE_ORELSE_RESERVE : Try to allocate and reserve if resources aren&apos;t available now. MATCH_SATISFIABILITY: Do a satisfiablity check and do not allocate. MATCH_ALLOCATE_W_SATISFIABILITY: try to allocate and run satisfiability check if resources are not available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobspec</parametername>
</parameternamelist>
<parameterdescription>
<para>jobspec string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean into which to return true if this job has been reserved instead of allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>String into which to return the resource set either allocated or reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>If allocated, 0 is returned; if reserved, actual time at which the job is reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="64" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="50" bodyend="76" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="64" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1aad2a68e0cf5b6d865d2cd0f807603c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_match_allocate</definition>
        <argsstring>(reapi_module_ctx_t *ctx, bool orelse_reserve, const char *jobspec, const uint64_t jobid, bool *reserved, char **R, int64_t *at, double *ov)</argsstring>
        <name>reapi_module_match_allocate</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>orelse_reserve</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>jobspec</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>reserved</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Match a jobspec to the &quot;best&quot; resources and either allocate orelse reserve them. The best resources are determined by the selected match policy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orelse_reserve</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean: if false, only allocate; otherwise, first try to allocate and if that fails, reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobspec</parametername>
</parameternamelist>
<parameterdescription>
<para>jobspec string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean into which to return true if this job has been reserved instead of allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>String into which to return the resource set either allocated or reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>If allocated, 0 is returned; if reserved, actual time at which the job is reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="89" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="78" bodyend="88" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="89" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1a8f7969dfde2ea789e8dc5d540a963968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_match_satisfy</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const char *jobspec, double *ov)</argsstring>
        <name>reapi_module_match_satisfy</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>jobspec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run Satisfiability check for jobspec.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobspec</parametername>
</parameternamelist>
<parameterdescription>
<para>jobspec string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="103" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="90" bodyend="101" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="103" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1a4234641a825d0ac28d8d054105b70119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_update_allocate</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const uint64_t jobid, const char *R, int64_t *at, double *ov, const char **R_out)</argsstring>
        <name>reapi_module_update_allocate</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>R_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the resource state with R.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>R string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>return the scheduled time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>return the performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R_out</parametername>
</parameternamelist>
<parameterdescription>
<para>return the updated R string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="118" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="103" bodyend="128" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1a937a6cfbc41a712ab5488ed1a143d797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_cancel</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const uint64_t jobid, bool noent_ok)</argsstring>
        <name>reapi_module_cancel</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>noent_ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel the allocation or reservation corresponding to jobid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noent_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>don&apos;t return an error on nonexistent jobid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="129" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="130" bodyend="138" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="129" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1afb5ba88129da9474cbc5768c83e0a759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_info</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const uint64_t jobid, bool *reserved, int64_t *at, double *ov)</argsstring>
        <name>reapi_module_info</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>reserved</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the information on the allocation or reservation corresponding to jobid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>const jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean into which to return true if this job has been reserved instead of allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>If allocated, 0 is returned; if reserved, actual time at which the job is reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="146" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="140" bodyend="148" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="146" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1a5338f6c126f87cb99a2757ed5cc33551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_stat</definition>
        <argsstring>(reapi_module_ctx_t *ctx, int64_t *V, int64_t *E, int64_t *J, double *load, double *min, double *max, double *avg)</argsstring>
        <name>reapi_module_stat</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>E</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>J</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>load</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>avg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the performance information about the resource infrastructure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of resource vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of edges </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>J</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of jobs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>load</parametername>
</parameternamelist>
<parameterdescription>
<para>Graph load time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Min match time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max match time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>avg</parametername>
</parameternamelist>
<parameterdescription>
<para>Avg match time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="161" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="150" bodyend="159" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="161" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1ac42a889b956e84aaf936fe75accd75cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_set_handle</definition>
        <argsstring>(reapi_module_ctx_t *ctx, void *handle)</argsstring>
        <name>reapi_module_set_handle</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the opaque handle to the reapi module context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque handle. How it is used is an implementation detail. However, when it is used within a Flux&apos;s service module, it is expected to be a pointer to a flux_t object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="174" column="5" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="161" bodyend="169" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="174" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8h_1aba98993a24340aeca6ba24a78d64107b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* reapi_module_get_handle</definition>
        <argsstring>(reapi_module_ctx_t *ctx)</argsstring>
        <name>reapi_module_get_handle</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the opaque handle to the reapi module context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" line="181" column="6" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="171" bodyend="178" declfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h" declline="181" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2019<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>(c.f.<sp/>AUTHORS,<sp/>NOTICE.LLNS,<sp/>LICENSE)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Flux<sp/>resource<sp/>manager<sp/>framework.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>details,<sp/>see<sp/>https://github.com/flux-framework.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">\*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>REAPI_MODULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REAPI_MODULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;flux/core.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resource/policies/base/match_op.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx</ref><sp/><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*reapi_module_new<sp/>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reapi_module_destroy<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_match<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/>match_op_t<sp/>match_op,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jobspec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R,<sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_match_allocate<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>orelse_reserve,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jobspec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R,<sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_match_satisfy<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jobspec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_update_allocate<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*R,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R_out);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_cancel<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noent_ok);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_info<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved,<sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_stat<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/>int64_t<sp/>*V,<sp/>int64_t<sp/>*E,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*J,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*load,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*avg);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_set_handle<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*reapi_module_get_handle<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>REAPI_MODULE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>vi:tabstop=4<sp/>shiftwidth=4<sp/>expandtab</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.h"/>
  </compounddef>
</doxygen>
