<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="reapi__module_8cpp" kind="file" language="C++">
    <compoundname>reapi_module.cpp</compoundname>
    <includes local="no">flux/core.h</includes>
    <includes refid="reapi__module_8h" local="yes">resource/reapi/bindings/c/reapi_module.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cerrno</includes>
    <includes refid="reapi__module_8hpp" local="yes">resource/reapi/bindings/c++/reapi_module.hpp</includes>
    <includes refid="reapi__module__impl_8hpp" local="yes">resource/reapi/bindings/c++/reapi_module_impl.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>resource/reapi/bindings/c/reapi_module.h</label>
        <link refid="reapi__module_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>resource/reapi/bindings/c++/reapi_module_impl.hpp</label>
        <link refid="reapi__module__impl_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="10">
        <label>resource/reapi/bindings/c++/reapi.hpp</label>
        <link refid="reapi_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>resource/reapi/bindings/c++/reapi_module.hpp</label>
        <link refid="reapi__module_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>reapi_module.cpp</label>
        <link refid="reapi__module_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cerrno</label>
      </node>
      <node id="5">
        <label>cstdlib</label>
      </node>
      <node id="2">
        <label>flux/core.h</label>
      </node>
      <node id="4">
        <label>resource/policies/base/match_op.h</label>
        <link refid="match__op_8h_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="structreapi__module__ctx" prot="public">reapi_module_ctx</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="reapi__module_8cpp_1a38480ee1a4901d45c335bb4df3cc2a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
        <definition>reapi_module_ctx_t* reapi_module_new</definition>
        <argsstring>()</argsstring>
        <name>reapi_module_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize reapi_module context </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="33" column="31" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1a394a82a621ff6e5c50b30a8e008efa98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reapi_module_destroy</definition>
        <argsstring>(reapi_module_ctx_t *ctx)</argsstring>
        <name>reapi_module_destroy</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy reapi module context</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="45" column="17" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1a1d367c00ecc925d08e5d9ac61e5aaad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_match</definition>
        <argsstring>(reapi_module_ctx_t *ctx, match_op_t match_op, const char *jobspec, const uint64_t jobid, bool *reserved, char **R, int64_t *at, double *ov)</argsstring>
        <name>reapi_module_match</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>match_op_t</type>
          <declname>match_op</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>jobspec</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>reserved</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Match a jobspec to the &quot;best&quot; resources and either allocate orelse reserve them. The best resources are determined by the selected match policy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>match_op</parametername>
</parameternamelist>
<parameterdescription>
<para>match_op_t: set to specify the specific match option from 1 of 4 choices: MATCH_ALLOCATE: try to allocate now and fail if resources aren&apos;t available. MATCH_ALLOCATE_ORELSE_RESERVE : Try to allocate and reserve if resources aren&apos;t available now. MATCH_SATISFIABILITY: Do a satisfiablity check and do not allocate. MATCH_ALLOCATE_W_SATISFIABILITY: try to allocate and run satisfiability check if resources are not available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobspec</parametername>
</parameternamelist>
<parameterdescription>
<para>jobspec string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean into which to return true if this job has been reserved instead of allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>String into which to return the resource set either allocated or reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>If allocated, 0 is returned; if reserved, actual time at which the job is reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="50" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="50" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1aad2a68e0cf5b6d865d2cd0f807603c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_match_allocate</definition>
        <argsstring>(reapi_module_ctx_t *ctx, bool orelse_reserve, const char *jobspec, const uint64_t jobid, bool *reserved, char **R, int64_t *at, double *ov)</argsstring>
        <name>reapi_module_match_allocate</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>orelse_reserve</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>jobspec</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>reserved</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Match a jobspec to the &quot;best&quot; resources and either allocate orelse reserve them. The best resources are determined by the selected match policy.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orelse_reserve</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean: if false, only allocate; otherwise, first try to allocate and if that fails, reserve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobspec</parametername>
</parameternamelist>
<parameterdescription>
<para>jobspec string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean into which to return true if this job has been reserved instead of allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>String into which to return the resource set either allocated or reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>If allocated, 0 is returned; if reserved, actual time at which the job is reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="78" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1a8f7969dfde2ea789e8dc5d540a963968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_match_satisfy</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const char *jobspec, double *ov)</argsstring>
        <name>reapi_module_match_satisfy</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>jobspec</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run Satisfiability check for jobspec.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobspec</parametername>
</parameternamelist>
<parameterdescription>
<para>jobspec string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="90" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1a4234641a825d0ac28d8d054105b70119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_update_allocate</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const uint64_t jobid, const char *R, int64_t *at, double *ov, const char **R_out)</argsstring>
        <name>reapi_module_update_allocate</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>R</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>R_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the resource state with R.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>R string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>return the scheduled time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>return the performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R_out</parametername>
</parameternamelist>
<parameterdescription>
<para>return the updated R string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="103" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="103" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1a937a6cfbc41a712ab5488ed1a143d797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_cancel</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const uint64_t jobid, bool noent_ok)</argsstring>
        <name>reapi_module_cancel</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>noent_ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel the allocation or reservation corresponding to jobid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noent_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>don&apos;t return an error on nonexistent jobid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="130" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="130" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1afb5ba88129da9474cbc5768c83e0a759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_info</definition>
        <argsstring>(reapi_module_ctx_t *ctx, const uint64_t jobid, bool *reserved, int64_t *at, double *ov)</argsstring>
        <name>reapi_module_info</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>jobid</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>reserved</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>at</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the information on the allocation or reservation corresponding to jobid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jobid</parametername>
</parameternamelist>
<parameterdescription>
<para>const jobid of the uint64_t type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reserved</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean into which to return true if this job has been reserved instead of allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>at</parametername>
</parameternamelist>
<parameterdescription>
<para>If allocated, 0 is returned; if reserved, actual time at which the job is reserved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ov</parametername>
</parameternamelist>
<parameterdescription>
<para>Double into which to return performance overhead in terms of elapse time needed to complete the match operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="140" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1a5338f6c126f87cb99a2757ed5cc33551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_stat</definition>
        <argsstring>(reapi_module_ctx_t *ctx, int64_t *V, int64_t *E, int64_t *J, double *load, double *min, double *max, double *avg)</argsstring>
        <name>reapi_module_stat</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>V</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>E</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>J</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>load</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>avg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the performance information about the resource infrastructure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of resource vertices </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of edges </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>J</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of jobs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>load</parametername>
</parameternamelist>
<parameterdescription>
<para>Graph load time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Min match time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max match time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>avg</parametername>
</parameternamelist>
<parameterdescription>
<para>Avg match time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="150" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="150" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1ac42a889b956e84aaf936fe75accd75cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int reapi_module_set_handle</definition>
        <argsstring>(reapi_module_ctx_t *ctx, void *handle)</argsstring>
        <name>reapi_module_set_handle</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the opaque handle to the reapi module context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque handle. How it is used is an implementation detail. However, when it is used within a Flux&apos;s service module, it is expected to be a pointer to a flux_t object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="161" column="16" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="reapi__module_8cpp_1aba98993a24340aeca6ba24a78d64107b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* reapi_module_get_handle</definition>
        <argsstring>(reapi_module_ctx_t *ctx)</argsstring>
        <name>reapi_module_get_handle</name>
        <param>
          <type><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the opaque handle to the reapi module context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>reapi_module_ctx_t context object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" line="171" column="17" bodyfile="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp" bodystart="171" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2019<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>(c.f.<sp/>AUTHORS,<sp/>NOTICE.LLNS,<sp/>LICENSE)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Flux<sp/>resource<sp/>manager<sp/>framework.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>details,<sp/>see<sp/>https://github.com/flux-framework.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">\*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;flux/core.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resource/reapi/bindings/c/reapi_module.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resource/reapi/bindings/c++/reapi_module.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resource/reapi/bindings/c++/reapi_module_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Flux;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Flux::resource_model;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Flux::resource_model::detail;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structreapi__module__ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>flux_t<sp/>*h;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*reapi_module_new<sp/>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ctx<sp/>=<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*)malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*ctx))))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;h<sp/>=<sp/>flux_open<sp/>(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reapi_module_destroy<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(ctx);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_match<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_op_t<sp/>match_op,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jobspec,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R,<sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>R_buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*R_buf_c<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx<sp/>||<sp/>!ctx-&gt;h)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>reapi_module_t::match_allocate<sp/>(ctx-&gt;h,<sp/>match_op,<sp/>jobspec,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jobid,<sp/>*reserved,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_buf,<sp/>*at,<sp/>*ov))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(R_buf_c<sp/>=<sp/>strdup<sp/>(R_buf.c_str<sp/>())))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>(*R)<sp/>=<sp/>R_buf_c;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_match_allocate<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>orelse_reserve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jobspec,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R,<sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>match_op_t<sp/>match_op<sp/>=<sp/>orelse_reserve<sp/>?<sp/>match_op_t::MATCH_ALLOCATE_ORELSE_RESERVE<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>match_op_t::MATCH_ALLOCATE;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reapi_module_match<sp/>(ctx,<sp/>match_op,<sp/>jobspec,<sp/>jobid,<sp/>reserved,<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R,<sp/>at,<sp/>ov);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_match_satisfy<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jobspec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>match_op_t<sp/>match_op<sp/>=<sp/>match_op_t::MATCH_SATISFIABILITY;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid<sp/>=0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>*at;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reapi_module_match<sp/>(ctx,<sp/>match_op,<sp/>jobspec,<sp/>jobid,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reserved,<sp/>R,<sp/>at,<sp/>ov);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_update_allocate<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*R,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R_out)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>R_buf<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*R_buf_c<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx<sp/>||<sp/>!ctx-&gt;h<sp/>||<sp/>!R)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(rc<sp/>=<sp/>reapi_module_t::update_allocate<sp/>(ctx-&gt;h,<sp/>jobid,<sp/>R,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*at,<sp/>*ov,<sp/>R_buf))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(R_buf_c<sp/>=<sp/>strdup<sp/>(R_buf.c_str<sp/>())))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>*R_out<sp/>=<sp/>R_buf_c;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_cancel<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noent_ok)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx<sp/>||<sp/>!ctx-&gt;h)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reapi_module_t::cancel<sp/>(ctx-&gt;h,<sp/>jobid,<sp/>noent_ok);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_info<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>jobid,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*reserved,<sp/>int64_t<sp/>*at,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ov)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx<sp/>||<sp/>!ctx-&gt;h)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reapi_module_t::info<sp/>(ctx-&gt;h,<sp/>jobid,<sp/>*reserved,<sp/>*at,<sp/>*ov);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_stat<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/>int64_t<sp/>*V,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*E,<sp/>int64_t<sp/>*J,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*load,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*avg)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx<sp/>||<sp/>!ctx-&gt;h)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reapi_module_t::stat<sp/>(ctx-&gt;h,<sp/>*V,<sp/>*E,<sp/>*J,<sp/>*load,<sp/>*min,<sp/>*max,<sp/>*avg);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reapi_module_set_handle<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;h<sp/>=<sp/>(flux_t<sp/>*)handle;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*reapi_module_get_handle<sp/>(<ref refid="structreapi__module__ctx" kindref="compound">reapi_module_ctx_t</ref><sp/>*ctx)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx-&gt;h;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>vi:tabstop=4<sp/>shiftwidth=4<sp/>expandtab</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/hobbs17/flux-sched/resource/reapi/bindings/c/reapi_module.cpp"/>
  </compounddef>
</doxygen>
