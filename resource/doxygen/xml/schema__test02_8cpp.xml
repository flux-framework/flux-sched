<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="schema__test02_8cpp" kind="file" language="C++">
    <compoundname>schema_test02.cpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cerrno</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="yes">src/common/libtap/tap.h</includes>
    <includes refid="infra__data_8hpp" local="yes">infra_data.hpp</includes>
    <incdepgraph>
      <node id="20">
        <label>stdbool.h</label>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="17">
        <label>resource/planner/c/planner_multi.h</label>
        <link refid="planner__multi_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="19">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>resource/schema/data_std.hpp</label>
        <link refid="data__std_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="21">
        <label>stddef.h</label>
      </node>
      <node id="15">
        <label>resource/schema/ephemeral.hpp</label>
        <link refid="ephemeral_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>schema_test02.cpp</label>
        <link refid="schema__test02_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cerrno</label>
      </node>
      <node id="2">
        <label>cstdlib</label>
      </node>
      <node id="10">
        <label>src/common/libtap/tap.h</label>
      </node>
      <node id="18">
        <label>planner.h</label>
        <link refid="planner_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>boost/optional.hpp</label>
      </node>
      <node id="11">
        <label>infra_data.hpp</label>
        <link refid="infra__data_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="5">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="schema__test02_8cpp_1a4ec155a326a7a397864b0b91880d9605" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int test_constructors_and_overload</definition>
        <argsstring>()</argsstring>
        <name>test_constructors_and_overload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/schema/test/schema_test02.cpp" line="27" column="12" bodyfile="/home/hobbs17/flux-sched/resource/schema/test/schema_test02.cpp" bodystart="27" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="schema__test02_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hobbs17/flux-sched/resource/schema/test/schema_test02.cpp" line="172" column="5" bodyfile="/home/hobbs17/flux-sched/resource/schema/test/schema_test02.cpp" bodystart="172" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************************\</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2023<sp/>Lawrence<sp/>Livermore<sp/>National<sp/>Security,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>(c.f.<sp/>AUTHORS,<sp/>NOTICE.LLNS,<sp/>LICENSE)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Flux<sp/>resource<sp/>manager<sp/>framework.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>details,<sp/>see<sp/>https://github.com/flux-framework.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LGPL-3.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment">\*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;src/common/libtap/tap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;infra_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">Flux::resource_model;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_constructors_and_overload<sp/>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>*infra1,<sp/>*infra2,<sp/>*infra3,<sp/>*infra4,<sp/>*infra5<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>*infra6,<sp/>*infra7,<sp/>*infra8,<sp/>*infra9,<sp/>*infra10<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>resource_total<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>resource_type[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;core&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>resource_totals[]<sp/>=<sp/>{10,<sp/>20,<sp/>30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*resource_types[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;colors[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>infra1-&gt;subplans[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra1<sp/>==<sp/>*infra2));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;initialized<sp/>pool_infra_t<sp/>not<sp/>equal<sp/>to<sp/>uninitialized<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;colors[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>infra2-&gt;subplans[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(*infra1<sp/>==<sp/>*infra2));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;initialized<sp/>pool_infra_t<sp/>equal<sp/>to<sp/>identically<sp/>initialized<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>infra3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>(*infra1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(*infra3<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;copied<sp/>pool_infra_t<sp/>equal<sp/>to<sp/>rhs<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>infra4<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>*infra4<sp/>=<sp/>*infra1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(*infra4<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;assigned<sp/>pool_infra_t<sp/>equal<sp/>to<sp/>rhs<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>infra4-&gt;job2span[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra4<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;mutated<sp/>pool_infra_t<sp/>not<sp/>equal<sp/>to<sp/>original<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;colors[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(1,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>infra5-&gt;subplans[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra5<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>initialized<sp/>with<sp/>different<sp/>x_checker<sp/>not<sp/>equal<sp/>to<sp/>original<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;colors[</highlight><highlight class="stringliteral">&quot;storage&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>infra6-&gt;subplans[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra6<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>initialized<sp/>with<sp/>different<sp/>colors<sp/>not<sp/>equal<sp/>to<sp/>original<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;colors[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>infra7-&gt;subplans[</highlight><highlight class="stringliteral">&quot;storage&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra7<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>initialized<sp/>with<sp/>different<sp/>subplan<sp/>systems<sp/>not<sp/>equal<sp/>to<sp/>original<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;colors[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>infra8-&gt;subplans[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(1,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra8<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>initialized<sp/>with<sp/>different<sp/>subplan<sp/>planner_multis<sp/>not<sp/>equal<sp/>to<sp/>original<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;tags[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;x_spans[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;job2span[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;colors[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;colors[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;x_checker<sp/>=<sp/>planner_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_total,<sp/>resource_type);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>infra9-&gt;subplans[</highlight><highlight class="stringliteral">&quot;containment&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planner_multi_new<sp/>(0,<sp/>INT64_MAX,<sp/>resource_totals,<sp/>resource_types,<sp/>len);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>(*infra9<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>initialized<sp/>with<sp/>different<sp/>subplan<sp/>planner_multis<sp/>len<sp/>not<sp/>equal<sp/>to<sp/>original<sp/>pool_infra_t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>*infra9<sp/>=<sp/>*infra1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(*infra9<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>assignment<sp/>overload<sp/>works<sp/>with<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>infra10<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structFlux_1_1resource__model_1_1pool__infra__t" kindref="compound">pool_infra_t</ref><sp/>(*infra9);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>bo<sp/>=<sp/>(bo<sp/>||<sp/>!(*infra10<sp/>==<sp/>*infra1));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>(!bo,<sp/></highlight><highlight class="stringliteral">&quot;pool_infra_t<sp/>ctor<sp/>works&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra2;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra3;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra4;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra5;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra6;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra7;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra8;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra9;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>infra10;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>plan<sp/>(12);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>test_constructors_and_overload<sp/>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>done_testing<sp/>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>vi:<sp/>ts=4<sp/>sw=4<sp/>expandtab</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/hobbs17/flux-sched/resource/schema/test/schema_test02.cpp"/>
  </compounddef>
</doxygen>
